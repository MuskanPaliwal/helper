CREATE TABLE "conversation_follows" (
	"created_at" timestamp with time zone NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "conversation_follows_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"conversation_id" bigint NOT NULL,
	"user_id" uuid NOT NULL,
	CONSTRAINT "conversation_follows_conversation_user_unique" UNIQUE("conversation_id","user_id")
);
--> statement-breakpoint
ALTER TABLE "conversation_follows" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
ALTER TABLE "conversation_follows" ADD CONSTRAINT "conversation_follows_conversation_id_conversations_conversation_id_fk" FOREIGN KEY ("conversation_id") REFERENCES "public"."conversations_conversation"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "conversation_follows" ADD CONSTRAINT "conversation_follows_user_id_user_profiles_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."user_profiles"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "conversation_follows_conversation_id_idx" ON "conversation_follows" USING btree ("conversation_id");--> statement-breakpoint
CREATE INDEX "conversation_follows_user_id_idx" ON "conversation_follows" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX "conversation_follows_created_at_idx" ON "conversation_follows" USING btree ("created_at");--> statement-breakpoint
CREATE INDEX "conversation_follows_user_conversation_idx" ON "conversation_follows" USING btree ("user_id","conversation_id");